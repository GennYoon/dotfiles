set -ga terminal-overrides ",xterm-256color:RGB"
set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g allow-passthrough on
set -g mouse on

set -g status-left "#[fg=blue,bold]#S"
set -ga status-left " #[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux.yml)"
set -g status-left-length 200    # increase length (from 10)
set -g status-position top       # macOS / darwin style
set -g status-right ''           # blank
set -g status-style 'bg=default' # transparent

set -g window-status-current-format 'ðŸ‘‰ #[fg=magenta]#W'
set -g window-status-format '  #[fg=gray]#W'

unbind r
bind r source-file ~/.config/tmux/tmux.conf

set -g prefix C-t

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set -g detach-on-destroy off

# implement vim motions for pane movement
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Implement pane resizing with alt array keys
unbind Up
unbind Down
unbind Left
unbind Right
bind Up resize-pane -U 5
bind Down resize-pane -D 5
bind Left resize-pane -L 5
bind Right resize-pane -R 5

unbind %
bind | split-window -h -c "#{pane_current_path}"

unbind '"'
bind - split-window -v -c "#{pane_current_path}"

# B for back a window, N for next window. P still works
bind b previous-window

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

bind -N "âŒ˜+g lazygit " g new-window -c "#{pane_current_path}" -n "ðŸŒ³" "lazygit 2> /dev/null"
bind -N "âŒ˜+G gh-dash " G new-window -c "#{pane_current_path}" -n "ðŸ˜º" "gh dash 2> /dev/null"

##### Display Popups ##### 
bind C-y display-popup -d "#{pane_current_path}" -w 80% -h 80% -E "lazygit"
bind C-n display-popup -E 'bash -i -c "read -p \"Session name: \" name; tmux new-session -d -s \$name && tmux switch-client -t \$name"'
bind C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# bind C-p display-popup -E "ipython"
bind C-f display-popup -w 80% -h 80% -E "~/.cargo/bin/rmpc"
bind C-c display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "claude --continue || claude"
bind C-z display-popup \
  -w 80% \
  -h 80% \
  -E 'nvim ~/.zshrc'
# bind C-g display-popup -E "bash -i ~/.tmux/scripts/chat-popup.sh"
bind C-t display-popup \
  -d "#{pane_current_path}" \
  -w 75% \
  -h 75% \
  -E "zsh"

##### Display Menu ##### 

bind d display-menu -T "#[align=centre]Dotfiles" -x C -y C \
  ".zshrc"            z  "display-popup -E 'nvim ~/.zshrc'" \
  ".tmux.conf"        t  "display-popup -E 'nvim ~/.config/tmux/tmux.conf'" \
  "Exit"              q  ""

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

##### Plugins #####

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'fabioluciano/tmux-tokyo-night'


set -g status-position top 

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
